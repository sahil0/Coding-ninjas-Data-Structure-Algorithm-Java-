// Maximum Square Matrix With All Zeros
// Send Feedback
// Given a n*m matrix which contains only 0s and 1s, find out the size of maximum square sub-matrix with all 0s. You need to return the size of square with all 0s.
// Input format :
// Line 1 : n and m (space separated positive integers)
// Next n lines : m elements of each row (separated by space).
// Output Format:
// Line 1 : Size of maximum square sub-matrix
// Sample Input :
// 3 3
// 1 1 0
// 1 1 1
// 1 1 1
// Sample Output :
// 1


public class Solution {
	
	public static int findMaxSquareWithAllZeros(int[][] input){
		
	int n = input.length;
		int m = input[0].length;
		
		int[][] storage = new int[n][m];
		int max = Integer.MIN_VALUE;
		
		for(int i = 0; i < n; i ++) {
			if(input[i][0] == 0)
				storage[i][0] = 1;
			else
				storage[i][0] = 0;
			if(max < storage[i][0])
				max = storage[i][0];
		}
		
		for(int j = 0; j < m; j ++) {
			if(input[0][j] == 0)
				storage[0][j] = 1;
			else
				storage[0][j] = 0;
			if(max < storage[0][j])
				max = storage[0][j];
		}
		
		for(int i = 1; i < n; i ++) {
			for(int j = 1; j < m; j ++) {
				if(input[i][j] == 0)
					storage[i][j] = Math.min(storage[i - 1][j - 1], Math.min(storage[i][j - 1], storage[i - 1][j])) + 1;
				else
					storage[i][j] = 0;
				if(max < storage[i][j])
					max = storage[i][j];
			}
		}
		
		return max;

	}

	
}
