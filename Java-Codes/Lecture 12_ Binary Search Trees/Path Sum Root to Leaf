// Path Sum Root to Leaf
// Send Feedback
// Given a binary tree and a number k, print out all root to leaf paths where the sum of all nodes value is same as the given number k.
// Input format :

// Line 1 : Elements in level order form (separated by space)

// (If any node does not have left or right child, take -1 in its place)

// Line 2 : k

// Output format : Print each path in new line, elements separated by space

// Sample Input 1 :
// 5 6 7 2 3 -1 1 -1 -1 -1 9 -1 -1 -1 -1
// 13
// Sample Output 1 :
// 5 6 2
// 5 7 1

public class Solution {

/*	Binary Tree Node class
 * 
 * class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;
		
		public BinaryTreeNode(T data) {
			this.data = data;
		}
	}
	*/
	
	public static void rootToLeafPathsSumToK(BinaryTreeNode<Integer> root, int k) {
		// Write your code here
	 helper(root,k,"");
    }
    
    private static void helper(BinaryTreeNode<Integer> root,int k,String s){
        if(root==null)
            return;
        if(root.left==null && root.right==null && root.data==k)
        {
            System.out.println(s+root.data);
            return;
        }
        s=s+root.data+" ";
   
        helper(root.left,k-root.data,s);
        helper(root.right,k-root.data,s);
        
    }
}
