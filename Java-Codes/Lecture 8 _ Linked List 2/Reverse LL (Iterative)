// Reverse LL (Iterative)
// Send Feedback
// Given a linked list, reverse it iteratively.
// You don't need to print the elements, just reverse the LL duplicates and return the head of updated LL.
// Input format : Linked list elements (separated by space and terminated by -1)`

// Sample Input 1 :
// 1 2 3 4 5 -1
// Sample Output 1 :
// 5 4 3 2 1
/*
 class LinkedListNode<T> {
	public T data;
	public LinkedListNode<T> next;

	public LinkedListNode(T data) {
		this.setData(data);
		this.next = null;
	}

	public T getData() {
		return data;
	}

	public void setData(T data) {
		this.data = data;
	}

}
 * */
public class Solution {
	public static LinkedListNode<Integer> reverse_I(LinkedListNode<Integer> head) {
        
        LinkedListNode<Integer> curr =head;
        
          LinkedListNode<Integer>  prev=null;
          LinkedListNode<Integer> temp;
        
        while(curr!=null)
        {
            temp=curr.next;
            curr.next=prev;
            prev=curr;
            curr=temp;
        }
		
		return prev;
    }

}
