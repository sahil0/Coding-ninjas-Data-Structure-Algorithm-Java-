
// Reverse LL (Recursive)
// Send Feedback
// Given a linked list, reverse it using recursion.
// You don't need to print the elements, just reverse the LL duplicates and return the head of updated LL.
// Input format : Linked list elements (separated by space and terminated by -1)`

// Sample Input 1 :
// 1 2 3 4 5 -1
// Sample Output 1 :
// 5 4 3 2 1

/*
class LinkedListNode<T> {
	public T data;
	public LinkedListNode<T> next;

	public LinkedListNode(T data) {
		this.setData(data);
		this.next = null;
	}

	public T getData() {
		return data;
	}

	public void setData(T data) {
		this.data = data;
	}

}
* */
public class Solution {
	
	public static LinkedListNode<Integer> reverse_R(LinkedListNode<Integer> head) {
        
        if(head==null || head.next==null)
            return head;
        
        
        
       LinkedListNode<Integer> final_head= reverse_R(head.next);
		LinkedListNode<Integer> temp=final_head;
        while(temp.next!=null)
        {
            temp=temp.next;
        }
        temp.next=head;
        head.next=null;
        
        return final_head;
	}
}
