// Code: Number of Balanced BTs
// Send Feedback
// Given an integer h, find the possible number of balanced binary trees of height h. You just need to return the count of possible binary trees which are balanced.
// This number can be huge, so return output modulus 10^9 + 7.
// Write a simple recursive solution.
// Input Format :
// Integer h
// Output Format :
// Count % 10^9 + 7
// Input Constraints :
// 1 <= h <= 40
// Sample Input 1:
// 3
// Sample Output 1:
// 15
// Sample Input 2:
// 4
// Sample Output 2:
// 315


public class Solution {

	public static int balancedTreesOfHeightH(int height){
   if(height == 1 || height == 0) return 1;

        int h1 = balancedTreesOfHeightH(height-1);
        int h2 = balancedTreesOfHeightH(height-2);
        int m = (int)Math.pow(10,9) + 7;
        long res1 = ((long)h1*h1);
        long res2 = ((long)h1*h2*2);

        int val1 = (int)(res1%m);
        int val2 = (int)(res2%m);

        return (val1 + val2)%m;
	}
}
